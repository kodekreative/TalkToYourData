import plotly.express as px
import plotly.graph_objects as go
from plotly.subplots import make_subplots
import pandas as pd
import streamlit as st
from sql_query_generation import generate_sql_query, run_sql_query

class ExecutiveSummaryVisualization:

    def plot_publisher_revenue(self):
        """Create a bar chart showing total revenue by publisher"""
        publisher_revenue_query = """
            I want you to find the total revenue generated by each publisher and sort them by revenue.
            Resultant columns name should be
                -   PUBLISHER
                -   TOTAL_REVENUE
        """
        query = generate_sql_query(publisher_revenue_query)
        rows = run_sql_query(query)
        revenue_by_publisher = pd.DataFrame(rows)

        fig = px.bar(
            revenue_by_publisher,
            x='PUBLISHER',
            y='TOTAL_REVENUE',
            title='Total Revenue by Publisher',
            labels={'REVENUE': 'Total Revenue ($)', 'PUBLISHER': 'Publisher'},
            color='TOTAL_REVENUE',
            color_continuous_scale='Viridis'
        )
        fig.update_layout(
            xaxis_tickangle=-45,
            showlegend=False,
            height=500
        )
        return fig

    def plot_billable_analysis(self):
        """
        Analyze billable/non-billable leads by publisher with quality threshold
        """
        billable_analysis_query = """
            I want to analyze the billable status of leads by publisher. 
            Please show me for each publisher:
                1. The count of leads
                2. The percentage of leads that are billable vs non-billable
                3. Grouped by publisher and billable status
                4. With percentages calculated as a portion of each publisher's total leads
            OUTPUT COLUMN NAMES:
                -  PUBLISHER
                -  BILLABLE
                -  LEAD COUNT
                -  PERCENTAGE
        """
        query = generate_sql_query(billable_analysis_query)
        data = pd.DataFrame(run_sql_query(query))

        st.dataframe(data)
        
        # Calculate overall billable rate per publisher
        billable_rates = data.pivot(index='PUBLISHER', columns='BILLABLE', values='PERCENTAGE').fillna(0)
        billable_rates['healthy'] = billable_rates['Yes'] >= 70
        
        fig = px.bar(
            data,
            x='PUBLISHER',
            y='PERCENTAGE',
            color='BILLABLE',
            title='Billable Lead Analysis by Publisher',
            labels={'PERCENTAGE': 'Percentage of Leads', 'PUBLISHER': 'Publisher'},
            color_discrete_map={'Yes': '#2ca02c', 'No': '#d62728'},
            barmode='group'
        )
        
        # Add 70% threshold line
        fig.add_hline(
            y=70, 
            line_dash="dot",
            annotation_text="Healthy Threshold (70%)",
            line_color="orange"
        )
        
        # Highlight problematic publishers
        for i, publisher in enumerate(billable_rates.index):
            if not billable_rates.loc[publisher, 'healthy']:
                fig.add_vrect(
                    x0=i-0.5, x1=i+0.5,
                    fillcolor="red", opacity=0.1,
                    line_width=0
                )
        
        fig.update_layout(
            xaxis_tickangle=-45,
            height=500,
            legend_title_text='Billable Status'
        )
        return fig
    
    def display_all_visualizations(self):
        """Display all visualizations in Streamlit"""
        st.title('Revenue Analysis Dashboard')

        st.header('Publisher Revenue Analysis')
        st.plotly_chart(self.plot_publisher_revenue(), use_container_width=True)

        st.header('Billable Lead Analysis by Publisher')
        st.plotly_chart(self.plot_billable_analysis(), use_container_width=True)
